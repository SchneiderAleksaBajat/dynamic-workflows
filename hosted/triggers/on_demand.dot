digraph workflow{
    entry[
        # On Demand is a bit ambiguous, OnRequestTrigger would make more sense.
        se_type0 = OnDemandTrigger,
        # se_onDemandScopes = "" - Required scopes user must have to call this workflow.
        se_triggerCondition0 = "(ctx, log) => {
            return ctx.State.SomeState == \"execute\";
        }"
        /* 
        To trigger it send POST to ExternalEvents service
        api/v1/RunningWorkflow/Dynamic?tenantId=
        {
            "workflowAncestralId": "", 
            "blockUntilWaitFor" : false, 
            "blockTimeout": 60,
            "state": {
                "field1": "value1",
                "field2": "value2",
            }
        }
        workflowAncestralId - Ancestral id of the workflow that you wish to run.
        blockUntilWaitFor - Will not return response until workflow starts waiting for an external event.
        blockTimeout - Max 360 seconds, time to wait for workflow to start waiting.
        state - Initial state given to the workflow.
        */
    ];

    log[
        se_type0 = Action,
        se_action0 = "(ctx, log) => {
            log.LogInformation(\"On Demand Triggered.\");
        }"
    ];

    exit[];

    entry->log->exit;
}